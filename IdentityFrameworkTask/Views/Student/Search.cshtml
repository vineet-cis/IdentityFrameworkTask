@model IEnumerable<IdentityFrameworkTask.DataModels.Student>
@{
    ViewData["Title"] = "Search";
    Layout = "";
}

<div>
    <h1 class="text-primary text-center">Student Details</h1>
</div>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', sans-serif;
        }

        th, td {

            padding: 10px;
            text-align: center;
        }

        .table {
            width: 100%;
        }

        .table-container {

            margin: 0 auto;
            max-width: 900px;
        }

        body {

            align-items: center;
            justify-content: center;
            margin: 0;
        }

        #myInput {
            margin-left: 40px;
            width: 90%;
            /*max-width: 800px;*/
            display: flex, inline-block;
            justify-content: center;
            padding: 10px; 
            box-sizing: border-box;
        }

        .keyboard {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .btn, .delete, .shift, .space, .clear {

            background-color: rgb(104, 104, 255);
            border: none;
            display: inline-block;
            padding: .5rem 1rem;
            margin: .3rem;
            font-size: 1.3rem;
            color: #fff;
            width: 50px;
            height: 50px;
            border-radius: .5rem;

        }

        .delete,
        .shift,
        .space {
            font-size: 1rem;
            text-transform: capitalize;
        }

        .upper {
            text-transform: uppercase;
        }

        .clear {
            width: 90px;
            display: inline-block
        }

        .delete {
            width: 100px;
        }

        .shift {
            width: 70px;
        }

        .space {
            width: 350px;
        }  

        .highlight {
            background-color: yellow;
        }

    </style>
</head>
<body>
    <input type="text" id="myInput" placeholder="Search Students.." oninput="Search();"> <button class="clear">Clear</button>
    <br /><br />
    <div class="container">
        <div class="keyboard">
            <div class="row">
                <button class="btn">1</button>
                <button class="btn">2</button>
                <button class="btn">3</button>
                <button class="btn">4</button>
                <button class="btn">5</button>
                <button class="btn">6</button>
                <button class="btn">7</button>
                <button class="btn">8</button>
                <button class="btn">9</button>
                <button class="btn">0</button>
                <button class="delete"> backspace </button>
            </div>
            <div class="row">
                <button class="btn">q</button>
                <button class="btn">w</button>
                <button class="btn">e</button>
                <button class="btn">r</button>
                <button class="btn">t</button>
                <button class="btn">y</button>
                <button class="btn">u</button>
                <button class="btn">i</button>
                <button class="btn">o</button>
                <button class="btn">p</button>
            </div>
            <div class="row">
                <button class="btn">a</button>
                <button class="btn">s</button>
                <button class="btn">d</button>
                <button class="btn">f</button>
                <button class="btn">g</button>
                <button class="btn">h</button>
                <button class="btn">j</button>
                <button class="btn">k</button>
                <button class="btn">l</button>
            </div>
            <div class="row">
                <button class="btn">z</button>
                <button class="btn">x</button>
                <button class="btn">c</button>
                <button class="btn">v</button>
                <button class="btn">b</button>
                <button class="btn">n</button>
                <button class="btn">m</button>
                <button class="shift">Caps</button>
            </div>
            <div class="row">
                <button class="btn">-</button>
                <button class="space">Space</button>
                <button class="btn">'</button>
            </div>
        </div>
    </div>
    <br /> <br />
    <div class="table-container">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Phone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Age)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Phone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Age)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</body>
</html>


<script>

    debugger;
    const buttons = document.querySelectorAll('.btn')
    const box = document.querySelector('#myInput')
    const clear_btn = document.querySelector('.clear')
    const delete_btn = document.querySelector('.delete')
    const shift_btn = document.querySelector('.shift')
    const space_btn = document.querySelector('.space')

    let chars = []

    buttons.forEach(btn => {
        btn.addEventListener('click', () => {
            box.value += btn.innerText
            chars = box.value.split('')
            Search();
        })
    })

    delete_btn.addEventListener('click', () => {

        box.value += delete_btn.innerText
        chars.pop()
        box.value = chars.join('')
        Search(); barCheck();
    })

    clear_btn.addEventListener('click', () => {
        document.getElementById('myInput').value = ""
        chars.length = 0;
        $('tbody tr').fadeOut();
    })

    space_btn.addEventListener('click', () => {
        chars.push(' ')
        box.value = chars.join('')
        Search(); barCheck();
    })

    shift_btn.addEventListener('click', () => {
        buttons.forEach(btn => {
            btn.classList.toggle('upper')
        })
    })

    function Search()
    {
        debugger;
        var input = $('#myInput').val().trim();
        var regex = new RegExp(input, "i");

        $('tbody tr').each(function () {
            debugger;
            var rowMatch = false

            $(this).find('td').each(function () {
                debugger;

                var cellText = $(this).text();
                if (cellText.search(regex) >= 0) {

                    var highlightedText = cellText.replace(regex, match => `<span class="highlight">${match}</span>`);
                    $(this).html(highlightedText);
                    rowMatch = true;

                } else {
                    $(this).html(cellText);
                }
            });

            if(rowMatch)
            {
                $(this).fadeIn()
            }
            else {
                $(this).fadeOut();
            }
        });

        if ($('#myInput').val().trim() == "") {
            $('tbody tr').hide();
        }
    }

    function barCheck()
    {
        if ($('#myInput').val().trim() == "") {
            $('tbody tr').hide();
        }
    }

    $('tbody tr').hide();

</script>